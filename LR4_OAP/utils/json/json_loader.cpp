#include "functions.hpp"

void jsonLoaderFunc() {
    /*
     функция, содержащая все необходимые данные для выгрузки в json-файл
     */
    // список всех значений
    std::map<std::string, std::pair<std::pair<int, int>, std::pair<int, int>>> values = {
        {"A1", {{2, 3}, {2, 45}}}, {"A2", {{3, 3}, {3, 45}}}, {"A3", {{4, 3}, {4, 45}}}, {"A4", {{5, 3}, {5, 45}}},
        {"A5", {{6, 3}, {6, 45}}}, {"A6", {{7, 3}, {7, 45}}}, {"A7", {{8, 3}, {8, 45}}}, {"A8", {{9, 3}, {9, 45}}},
        {"A9", {{10, 3}, {10, 45}}}, {"A10", {{11, 3}, {11, 45}}}, {"B1", {{2, 5}, {2, 47}}}, {"B2", {{3, 5}, {3, 47}}},
        {"B3", {{4, 5}, {4, 47}}}, {"B4", {{5, 5}, {5, 47}}}, {"B5", {{6, 5}, {6, 47}}}, {"B6", {{7, 5}, {7, 47}}},
        {"B7", {{8, 5}, {8, 47}}}, {"B8", {{9, 5}, {9, 47}}}, {"B9", {{10, 5}, {10, 47}}}, {"B10", {{11, 5}, {11, 47}}},
        {"C1", {{2, 7}, {2, 49}}}, {"C2", {{3, 7}, {3, 49}}}, {"C3", {{4, 7}, {4, 49}}}, {"C4", {{5, 7}, {5, 49}}},
        {"C5", {{6, 7}, {6, 49}}}, {"C6", {{7, 7}, {7, 49}}}, {"C7", {{8, 7}, {8, 49}}}, {"C8", {{9, 7}, {9, 49}}},
        {"C9", {{10, 7}, {10, 49}}}, {"C10", {{11, 7}, {11, 49}}}, {"D1", {{2, 9}, {2, 51}}}, {"D2", {{3, 9}, {3, 51}}},
        {"D3", {{4, 9}, {4, 51}}}, {"D4", {{5, 9}, {5, 51}}}, {"D5", {{6, 9}, {6, 51}}}, {"D6", {{7, 9}, {7, 51}}},
        {"D7", {{8, 9}, {8, 51}}}, {"D8", {{9, 9}, {9, 51}}}, {"D9", {{10, 9}, {10, 51}}}, {"D10", {{11, 9}, {11, 51}}},
        {"E1", {{2, 11}, {2, 53}}}, {"E2", {{3, 11}, {3, 53}}}, {"E3", {{4, 11}, {4, 53}}}, {"E4", {{5, 11}, {5, 53}}},
        {"E5", {{6, 11}, {6, 53}}}, {"E6", {{7, 11}, {7, 53}}}, {"E7", {{8, 11}, {8, 53}}}, {"E8", {{9, 11}, {9, 53}}},
        {"E9", {{10, 11}, {10, 53}}}, {"E10", {{11, 11}, {11, 53}}}, {"F1", {{2, 13}, {2, 55}}}, {"F2", {{3, 13}, {3, 55}}},
        {"F3", {{4, 13}, {4, 55}}}, {"F4", {{5, 13}, {5, 55}}}, {"F5", {{6, 13}, {6, 55}}}, {"F6", {{7, 13}, {7, 55}}},
        {"F7", {{8, 13}, {8, 55}}}, {"F8", {{9, 13}, {9, 55}}}, {"F9", {{10, 13}, {10, 55}}}, {"F10", {{11, 13}, {11, 55}}},
        {"G1", {{2, 15}, {2, 57}}}, {"G2", {{3, 15}, {3, 57}}}, {"G3", {{4, 15}, {4, 57}}}, {"G4", {{5, 15}, {5, 57}}},
        {"G5", {{6, 15}, {6, 57}}}, {"G6", {{7, 15}, {7, 57}}}, {"G7", {{8, 15}, {8, 57}}}, {"G8", {{9, 15}, {9, 57}}},
        {"G9", {{10, 15}, {10, 57}}}, {"G10", {{11, 15}, {11, 57}}}, {"H1", {{2, 17}, {2, 59}}}, {"H2", {{3, 17}, {3, 59}}},
        {"H3", {{4, 17}, {4, 59}}}, {"H4", {{5, 17}, {5, 59}}}, {"H5", {{6, 17}, {6, 59}}}, {"H6", {{7, 17}, {7, 59}}},
        {"H7", {{8, 17}, {8, 59}}}, {"H8", {{9, 17}, {9, 59}}}, {"H9", {{10, 17}, {10, 59}}}, {"H10", {{11, 17}, {11, 59}}},
        {"I1", {{2, 19}, {2, 61}}}, {"I2", {{3, 19}, {3, 61}}}, {"I3", {{4, 19}, {4, 61}}}, {"I4", {{5, 19}, {5, 61}}},
        {"I5", {{6, 19}, {6, 61}}}, {"I6", {{7, 19}, {7, 61}}}, {"I7", {{8, 19}, {8, 61}}}, {"I8", {{9, 19}, {9, 61}}},
        {"I9", {{10, 19}, {10, 61}}}, {"I10", {{11, 19}, {11, 61}}}, {"J1", {{2, 21}, {2, 63}}}, {"J2", {{3, 21}, {3, 63}}},
        {"J3", {{4, 21}, {4, 63}}}, {"J4", {{5, 21}, {5, 63}}}, {"J5", {{6, 21}, {6, 63}}}, {"J6", {{7, 21}, {7, 63}}},
        {"J7", {{8, 21}, {8, 63}}}, {"J8", {{9, 21}, {9, 63}}}, {"J9", {{10, 21}, {10, 63}}}, {"J10", {{11, 21}, {11, 63}}}
    };
    
    // список допустимых значений для бота
    std::map<std::string, std::pair<int, int>> botValidValues;
    // список допустимых значений для игрока
    std::map<std::string, std::pair<int, int>> playerValidValues;
    
    for (auto it = values.begin(); it != values.end(); ++it) {
        playerValidValues.emplace(it->first, it->second.first);
        botValidValues.emplace(it->first, it->second.second);
    }
    
    std::vector<std::string> boards = {
        "Ваша доска:                               Доска противника:     ",
        "   A B C D E F G H I J                       A B C D E F G H I J",
        " 1                                         1                    ",
        " 2                                         2                    ",
        " 3                                         3                    ",
        " 4                                         4                    ",
        " 5                                         5                    ",
        " 6                                         6                    ",
        " 7                                         7                    ",
        " 8                                         8                    ",
        " 9                                         9                    ",
        "10                                        10                    "
    };
    
    std::vector<std::pair<int, int>> playerMoves = {};
    
    std::vector<std::pair<int, int>> botMoves = {};
    
    json data;
    
    // добавление данных
    data["values"] = values;
    data["playerValidValues"] = playerValidValues;
    data["botValidValues"] = botValidValues;
    for (const auto& row : boards) {
        data["boards"].push_back(row);
    }
    data["playerMoves"] = playerMoves;
    data["botMoves"] = botMoves;
    
    jsonSaverFunc(data);
}
